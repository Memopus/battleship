(()=>{var t={402:(t,n,e)=>{"use strict";e.d(n,{Z:()=>s});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Belanosima&display=swap);"]),i.push([t.id,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100vh;\n  background-color: #006ba6;\n  color: #ffbc42;\n  font-family: "Belanosima", sans-serif;\n  text-align: center;\n}\n\n#root {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: 100%;\n}\n\n.turn {\n  width: 300px;\n  padding: 15px;\n}\n\n.square {\n  border: 1px solid #8bccff;\n  height: 40px;\n  width: 40px;\n  font-weight: bolder;\n  color: white;\n  background-color: #0496ff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 40px);\n  grid-template-rows: repeat(10, 40px);\n  border: 3px solid #8bccff;\n}\n.ships-container {\n  text-align: center;\n}\n.ships-container h1 {\n  margin-bottom: 10px;\n}\n.ships {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  height: 350px;\n  width: 350px;\n}\n\n.ship {\n  display: flex;\n  cursor: move;\n  border: 1px solid #8bccff;\n}\n\n.ship .square {\n  border: 1px solid #8bccff;\n}\n\n.popup {\n  position: absolute;\n  top: 10%;\n  background-color: white;\n  padding: 25px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.popup {\n  opacity: 0;\n  transition: opacity 0.5s linear;\n}\n\n.popup.show {\n  opacity: 1;\n}\n.popup.hide {\n  opacity: 0;\n}\n\n.start-btn {\n  padding: 20px;\n  width: 150px;\n  font-size: larger;\n  border: 2px solid #ffbc42;\n  color: #ffbc42;\n  background-color: transparent;\n}\n.restart-btn {\n  padding: 20px;\n  width: 150px;\n  font-size: larger;\n  border: 2px solid #ffbc42;\n  color: #ffbc42;\n  background-color: #0496ff;\n}\n\n.restart-btn:hover {\n  background-color: #ffbc42;\n  color: #0496ff;\n}\n\n.rotate {\n  padding: 10px;\n  font-size: larger;\n  margin-top: 20px;\n  background-color: transparent;\n  color: #ffbc42;\n  border: 2px solid #ffbc42;\n}\n\n.rotate:hover {\n  background-color: #ffbc42;\n  color: #006ba6;\n}\n\n.game-over {\n  position: absolute;\n  top: 50%;\n  background-color: #0496ff;\n  color: #ffbc42;\n  height: 250px;\n  width: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n  transform: translateY(-50%);\n  border-radius: 5px;\n}\n.blur-effect {\n  filter: blur(5px);\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,yBAAyB;EACzB,cAAc;EACd,qCAAqC;EACrC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,mBAAmB;EACnB,YAAY;EACZ,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,oCAAoC;EACpC,yBAAyB;AAC3B;AACA;EACE,kBAAkB;AACpB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;EACT,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,uBAAuB;EACvB,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,UAAU;EACV,+BAA+B;AACjC;;AAEA;EACE,UAAU;AACZ;AACA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,iBAAiB;EACjB,yBAAyB;EACzB,cAAc;EACd,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,YAAY;EACZ,iBAAiB;EACjB,yBAAyB;EACzB,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,gBAAgB;EAChB,6BAA6B;EAC7B,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,yBAAyB;EACzB,cAAc;EACd,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,sBAAsB;EACtB,SAAS;EACT,2BAA2B;EAC3B,kBAAkB;AACpB;AACA;EACE,iBAAiB;AACnB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Belanosima&display=swap");\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  height: 100vh;\r\n  background-color: #006ba6;\r\n  color: #ffbc42;\r\n  font-family: "Belanosima", sans-serif;\r\n  text-align: center;\r\n}\r\n\r\n#root {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  height: 100%;\r\n}\r\n\r\n.turn {\r\n  width: 300px;\r\n  padding: 15px;\r\n}\r\n\r\n.square {\r\n  border: 1px solid #8bccff;\r\n  height: 40px;\r\n  width: 40px;\r\n  font-weight: bolder;\r\n  color: white;\r\n  background-color: #0496ff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 40px);\r\n  grid-template-rows: repeat(10, 40px);\r\n  border: 3px solid #8bccff;\r\n}\r\n.ships-container {\r\n  text-align: center;\r\n}\r\n.ships-container h1 {\r\n  margin-bottom: 10px;\r\n}\r\n.ships {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  height: 350px;\r\n  width: 350px;\r\n}\r\n\r\n.ship {\r\n  display: flex;\r\n  cursor: move;\r\n  border: 1px solid #8bccff;\r\n}\r\n\r\n.ship .square {\r\n  border: 1px solid #8bccff;\r\n}\r\n\r\n.popup {\r\n  position: absolute;\r\n  top: 10%;\r\n  background-color: white;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.popup {\r\n  opacity: 0;\r\n  transition: opacity 0.5s linear;\r\n}\r\n\r\n.popup.show {\r\n  opacity: 1;\r\n}\r\n.popup.hide {\r\n  opacity: 0;\r\n}\r\n\r\n.start-btn {\r\n  padding: 20px;\r\n  width: 150px;\r\n  font-size: larger;\r\n  border: 2px solid #ffbc42;\r\n  color: #ffbc42;\r\n  background-color: transparent;\r\n}\r\n.restart-btn {\r\n  padding: 20px;\r\n  width: 150px;\r\n  font-size: larger;\r\n  border: 2px solid #ffbc42;\r\n  color: #ffbc42;\r\n  background-color: #0496ff;\r\n}\r\n\r\n.restart-btn:hover {\r\n  background-color: #ffbc42;\r\n  color: #0496ff;\r\n}\r\n\r\n.rotate {\r\n  padding: 10px;\r\n  font-size: larger;\r\n  margin-top: 20px;\r\n  background-color: transparent;\r\n  color: #ffbc42;\r\n  border: 2px solid #ffbc42;\r\n}\r\n\r\n.rotate:hover {\r\n  background-color: #ffbc42;\r\n  color: #006ba6;\r\n}\r\n\r\n.game-over {\r\n  position: absolute;\r\n  top: 50%;\r\n  background-color: #0496ff;\r\n  color: #ffbc42;\r\n  height: 250px;\r\n  width: 500px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  transform: translateY(-50%);\r\n  border-radius: 5px;\r\n}\r\n.blur-effect {\r\n  filter: blur(5px);\r\n}\r\n'],sourceRoot:""}]);const s=i},645:t=>{"use strict";t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:t=>{"use strict";t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:t=>{"use strict";var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var a={},i=[],s=0;s<t.length;s++){var c=t[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var A=e(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var f=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,o){var a=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var s=e(a[i]);n[s].references--}for(var c=r(t,o),d=0;d<a.length;d++){var l=e(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:t=>{"use strict";var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{"use strict";t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{"use strict";t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{"use strict";t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},682:t=>{t.exports=function(){const t=[],n=[],e=[],r=[],o=[],a=[];return{createBoard:function(){for(let n=0;n<10;n++)for(let e=0;e<10;e++)t.push([e,n,"empty"]);return t},board:t,placeShip:function(e,o){let a;const i=[],s=n.flat(),c=t.indexOf(t.find((t=>t[0]===o[0]&&t[1]===o[1])));"h"===e.position?a={starting:[t[c][0],t[c][1]],ending:[t[c][0]+e.length-1,t[c][1]]}:"v"===e.position&&(a={starting:[t[c][0],t[c][1]],ending:[t[c][0],t[c][1]+e.length-1]});for(let n=0;n<e.length;n++){let r;"h"===e.position?r=t.find((e=>e[0]===t[c][0]+n&&e[1]===t[c][1])):"v"===e.position&&(r=t.find((e=>e[0]===t[c][0]&&e[1]===t[c][1]+n)));const o=r[0],a=r[1];if(s.some((([t,n])=>t===o&&n===a)))return"Couldn't place ship"}for(let n=0;n<e.length;n++)if("h"===e.position){const r=t.find((e=>e[0]===t[c][0]+n&&e[1]===t[c][1]));i.push(r);const o=t.indexOf(t.find((e=>e[0]===t[c][0]+n&&e[1]===t[c][1])));t[o][2]=e}else if("v"===e.position){const r=t.find((e=>e[0]===t[c][0]&&e[1]===t[c][1]+n));i.push(r);const o=t.indexOf(r);t[o][2]=e}return n.push(i),r.push(e),a},receiveAttack:function(t){if(t[0]>=0&&t[1]>=0&&t[0]<=10&&t[1]<=10){for(let n=0;n<o.length;n++)if(o[n][0]===t[0]&&o[n][1]===t[1])return"coords already attacked";for(let e=0;e<n.length;e++)for(let r=0;r<n[e].length;r++)if(n[e][r][0]===t[0]&&n[e][r][1]===t[1])return n[e][r][2].hit(t),o.push(t),a.push(t),"hitted";return e.push(t),o.push(t),"missed"}},missedShots:e,isAllSunk:function(){for(let t=0;t<r.length;t++)if(!r[t].isSunk())return!1;return!0},hitCoords:a}}},264:t=>{t.exports=function(t,n){const e=[];return{attack:function(t,r=[]){return n?(r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],e.push(r),{hit:t.receiveAttack(r),coords:r}):(e.push(r),t.receiveAttack(r))},name:t,turn:!n,isComputer:n}}},422:t=>{t.exports=function(t,n="h"){const e=[];return{hits:0,hit:function(t=[]){return e.push(t),this.hits++},length:t,isSunk:function(){return this.hits===t},hitCoords:e,placed:!1,position:n}}}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return t[r](a,a.exports,e),a.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{"use strict";var t=e(379),n=e.n(t),r=e(795),o=e.n(r),a=e(569),i=e.n(a),s=e(565),c=e.n(s),d=e(216),l=e.n(d),p=e(589),A=e.n(p),u=e(402),f={};f.styleTagTransform=A(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),n()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var h=e(682),m=e.n(h);function C(t){const n=m()();n.createBoard();const e=document.createElement("div");e.classList.add("board");for(let t=0;t<10;t++)for(let n=0;n<10;n++){const r=document.createElement("div");r.classList.add("square"),r.setAttribute("data-x",n),r.setAttribute("data-y",t),e.appendChild(r)}return t.appendChild(e),n}var g=e(422),E=e.n(g);function b(t="Couldn't place Ship",n){const e=document.querySelector("#root"),r=document.createElement("div"),o=document.createElement("h2"),a=document.createElement("i");a.classList.add("fa-solid"),a.classList.add("fa-circle-xmark"),r.classList.add("popup"),r.classList.add("popup-animation"),o.textContent=t,r.appendChild(a),r.appendChild(o),e.appendChild(r),setTimeout((()=>{r.classList.add("show")}),10),setTimeout((()=>{r.classList.add("hide")}),n),setTimeout((()=>{r.remove()}),n+100)}function y(t){const n=[E()(2),E()(3),E()(3),E()(4),E()(5)],e=document.querySelector("#root"),r=document.createElement("div"),o=document.createElement("h1"),a=document.createElement("div"),i=document.createElement("h1"),s=document.createElement("h2"),c=document.createElement("div"),d=document.createElement("button");let l,p=null,A=null;r.classList.add("player-board"),a.classList.add("ships-container"),c.classList.add("ships"),d.classList.add("rotate"),d.innerHTML="Rotate <i class='fa-solid fa-rotate'></i>",o.textContent="Your Board",i.textContent="Place your ships",s.textContent="Drag n' Drop",a.appendChild(i),a.appendChild(s),a.appendChild(d),a.appendChild(c),r.appendChild(o),e.appendChild(r);const u=C(r);n.forEach((t=>{const e=document.createElement("div");e.setAttribute("id",n.indexOf(t)),e.setAttribute("draggable",!0);for(let n=0;n<t.length;n++){const r=document.createElement("div");r.classList.add("square"),r.setAttribute("id",n),e.classList.add("ship"),e.setAttribute("data-length",t.length),e.appendChild(r)}c.appendChild(e)})),window.addEventListener("mousedown",(t=>{A=t.target})),window.addEventListener("dragstart",(t=>{p=t.target})),d.addEventListener("click",(()=>{const t=document.querySelectorAll(".ship");n.forEach((t=>{t.position="h"===t.position?"v":"h"})),"v"===n[0].position?(c.style.flexDirection="row",t.forEach((t=>{t.style.flexDirection="column"}))):(c.style.flexDirection="column",t.forEach((t=>{t.style.flexDirection="row"})))})),window.addEventListener("dragover",(t=>{"square"===t.target.className&&t.preventDefault()})),r.addEventListener("drop",(e=>{let o,a,i,s=!1;const d=function(t,n){return t.find((t=>!t.placed&&t.length===parseInt(n.dataset.length)))}(n,p);if(function(t,n,e,r){const o=Math.abs(parseInt(n.id)-parseInt(e.dataset.length-1));if("h"===r){if(parseInt(t)+parseInt(e.dataset.length-1)-parseInt(n.id)<10&&parseInt(t)-parseInt(n.id)>=0)return!1}else if("v"===r&&parseInt(t)-parseInt(e.dataset.length-1)+o>=0&&parseInt(t)+o<10)return!1;return!0}("h"===d.position?e.target.dataset.x:e.target.dataset.y,A,p,d.position))b("Couldn't place ship",1e3);else{let t;t="h"===d.position?[parseInt(e.target.dataset.x)-parseInt(A.id),parseInt(e.target.dataset.y)]:[parseInt(e.target.dataset.x),parseInt(e.target.dataset.y)-parseInt(A.id)],a=u.placeShip(d,t),"Couldn't place ship"!==a&&(d.placed=!0,p.style.display="none",i=d.position)}if("Couldn't place ship"!==a)for(let t=parseInt(A.id);t<p.dataset.length;t++)for(let t=0;t<p.dataset.length;t++){let n=null;"h"===i?parseInt(e.target.dataset.x)+parseInt(p.dataset.length-1)-parseInt(A.id)<10&&parseInt(e.target.dataset.x)-parseInt(A.id)>=0&&(n=document.querySelector(`[data-x="${parseInt(e.target.dataset.x)+t-A.id}"][data-y="${e.target.dataset.y}"]`)):"v"===i&&(parseInt(e.target.dataset.y)-parseInt(p.dataset.length-1)+parseInt(A.id)>=0?n=document.querySelector(`[data-x="${parseInt(e.target.dataset.x)}"][data-y="${parseInt(e.target.dataset.y)+t-parseInt(A.id)}"]`):s=!0),n&&(n.style.backgroundColor="#A4E4FF")}else b("Couldn't place ship",1e3);s&&b("Couldn't place ship",1e3),o=function(t){for(let n=0;n<t.length;n++)if(!t[n].placed)return!1;return!0}(n),o&&(l=function(t){const n=document.createElement("button");return n.textContent="Start",n.classList.add("start-btn"),t.appendChild(n),n}(c)),t(o,u,r)})),e.appendChild(a)}var B=e(264),x=e.n(B);let v=!0;function k(t){const n=document.querySelector("#root");if(v){const e=document.querySelector(".ships-container"),r=document.createElement("div"),o=document.createElement("h1"),a=document.createElement("h1"),i=document.querySelector(".start-btn"),s=[E()(2),E()(3),E()(3),E()(4),E()(5)],c={player:x()("Memo",!1),computer:x()("Computer",!0)};let d;r.classList.add("turn"),r.appendChild(o),i.addEventListener("click",(()=>{e.classList.remove("ships-container"),e.classList.add("computer-board"),e.innerHTML="",a.textContent="Computer Board",e.appendChild(a),d=C(e),s.forEach((t=>{!function(t,n){const e=Math.random()>=.5?1:0;if(!0===n.placed)return;1===e&&(n.position="v");let r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];if("h"===n.position)for(;r[0]+n.length>=10;)r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];else if("v"===n.position)for(;r[1]+n.length>=10;)r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];let o=t.placeShip(n,r);for(;"Couldn't place ship"===o;){if(r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],"h"===n.position)for(;r[0]+n.length>=10;)r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];else if("v"===n.position)for(;r[1]+n.length>=10;)r=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];o=t.placeShip(n,r)}n.placed=!0}(d,t)})),o.textContent="Player turn",n.insertBefore(r,e)})),window.addEventListener("click",(n=>{if(n.target.classList.contains("attacked")||n.target.parentNode.classList.contains("attacked"))b("Position already attacked",700);else if("square"===n.target.className&&n.target.parentNode.parentNode.classList.contains("computer-board")&&c.player.turn){"square"===n.target.parentNode.classList&&(n.target=n.target.parentNode);const r=[parseInt(n.target.dataset.x),parseInt(n.target.dataset.y)],a=function(t,n,e,r,o,a){const i=r.player,s=r.computer;let c,d,l;return l=L(e,t,r,a),"object"==typeof l?l:(i.turn&&(c=i.attack(e,n),"coords already attacked"!==c?(o.textContent="Computer Turn",i.turn=!1,s.turn=!0):"coords already attacked"===c&&b("Position already attacked",700)),l=L(e,t,r,a),"object"==typeof l?{board:l,hit:c}:(s.turn&&setTimeout((()=>{for(d=s.attack(t);"coords already attacked"===d.hit;)d=s.attack(t);const n=document.querySelector(".player-board").querySelector(`[data-x="${d.coords[0]}"][data-y="${d.coords[1]}"]`);"hitted"===d.hit?(n.innerHTML="<i class='fa-solid fa-x'></i>",n.style.backgroundColor="red",n.style.fontSize="x-large"):"missed"===d.hit&&(n.innerHTML="<i class='fa-solid fa-x'></i>"),o.textContent="Player Turn",s.turn=!1,i.turn=!0}),500),l=L(e,t,r,a),"object"==typeof l?l:c))}(t,r,d,c,o,e);"hitted"!==a&&"hitted"!==a.hit||(n.target.innerHTML="<i class='fa-solid fa-x square-icon'></i>",n.target.style.backgroundColor="red",n.target.style.fontSize="x-large"),"missed"!==a&&"missed"!==a.hit||(n.target.innerHTML="<i class='fa-solid fa-x square-icon'></i>"),"missed"!==a&&"hitted"!==a&&(d=a.computerBoard),n.target.classList.add("attacked")}}))}}function L(t,n,e,r){let o=t.isAllSunk(),a=n.isAllSunk();const i={playerBoard:n,computerBoard:t};if(o){const n=M(e.player,root,r),a=()=>{v=!1,w(root,i.playerBoard,i.computerBoard),o=!1,t=C(r),n.removeEventListener("click",a)};return n.addEventListener("click",a),{computerBoard:t}}if(a){const n=M(e.computer,root,r),o=()=>{v=!1,w(root,i.playerBoard,i.computerBoard),a=!1,t=C(t),n.removeEventListener("click",o)};return n.addEventListener("click",o),{computerBoard:t}}}function M(t,n,e){const r=document.createElement("div"),o=document.createElement("h1"),a=document.createElement("button");document.querySelector("body"),e.style.pointerEvents="none",o.textContent=t.isComputer?"You Lost ! Computer won !!!":"You won !! GG",a.textContent="Play Again",r.classList.add("game-over"),a.classList.add("restart-btn");const i=n.children;for(let t=0;t<i.length;t++){const n=i[t];n!==r&&n.classList.add("blur-effect")}return r.appendChild(o),r.appendChild(a),n.appendChild(r),a}function w(t,n,e){return t.innerHTML="",y(((t,n,e)=>{t&&(v=!0,k(n))})),[n,e]}let S=!1;y(((t,n)=>{t&&(S=!0,k(n))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,